integration_test:
  image: ${DOCKER_IMAGE}:${PYTHON_IMAGE_TAG}-${IDF_BRANCH_TAG}
  stage: integration_test
  tags:
    - test
    - internet
  timeout: 2h
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage_integration.xml
    paths:
      - '*.txt'
    when: always
  dependencies:
    - build_wheel
  parallel:
    matrix:
      # PYTEST_SPLIT_TEST_GROUP: Split integration tests into parallel jobs. The number of groups has to be reflected in the pytest invocation
      - IDF_BRANCH_TAG: [release-v5.0, release-v5.1]
        PYTHON_IMAGE_TAG: ["3.7", "3.13"]
        PYTEST_SPLIT_TEST_GROUP: [1, 2, 3, 4, 5]
      - IDF_BRANCH_TAG: [release-v5.2, release-v5.3, release-v5.4]
        PYTHON_IMAGE_TAG: ["3.8", "3.13"]
        PYTEST_SPLIT_TEST_GROUP: [1, 2, 3, 4, 5]
      - IDF_BRANCH_TAG: [release-v5.5]
        PYTHON_IMAGE_TAG: ["3.9", "3.13"]
        PYTEST_SPLIT_TEST_GROUP: [1, 2, 3, 4, 5]
  before_script:
    - IMAGE_TAG="${DOCKER_IMAGE}:${PYTHON_IMAGE_TAG}-${IDF_BRANCH_TAG}"

    - echo "Using esp-idf branch - ${BRANCH_NAME}"
    - echo "Using docker image - ${IMAGE_TAG}"

    # Get the version of component manager
    # There should be only one wheel file in the dist directory
    - WHEEL=$(ls ${CI_PROJECT_DIR}/dist/*.whl)

    # Download the constraints file, and remove the component manager constraint and save it in the .espressif directory
    # We want to do so, to make sure that all dependencies are installed carefully
    - |
      if [ "${IDF_BRANCH_TAG}" = "master" ]; then
        export CONSTRAINT_FILE_VERSION="v6.0"
      else
        export CONSTRAINT_FILE_VERSION=$(echo $IDF_BRANCH_TAG | sed -e "s/release-v/v/g")
      fi
      export CI_PYTHON_CONSTRAINT_FILE="espidf.constraints.${CONSTRAINT_FILE_VERSION}.txt"
      curl https://dl.espressif.com/dl/esp-idf/${CI_PYTHON_CONSTRAINT_FILE} | \
      grep -v "^idf-component-manager" \
      > ~/.espressif/${CI_PYTHON_CONSTRAINT_FILE}

    - /esp-idf/install.sh
    - . /esp-idf/export.sh

    # Install the test dependencies
    - pip uninstall -y idf-component-manager
    - pip install "${WHEEL}[test]"
  script:
    - |
      pytest -c "pytest_integration.ini" \
      --log-cli-level=INFO \
      --splits 5 \
      --group ${PYTEST_SPLIT_TEST_GROUP}
