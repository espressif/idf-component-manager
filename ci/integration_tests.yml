integration_test:
  image: ${DOCKER_REGISTRY}/component-manager-integration-tests:${PYTHON_IMAGE_TAG}-${IDF_BRANCH_TAG}
  stage: integration_test
  tags:
    - test
    - internet
  timeout: 2h
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage_integration.xml
    paths:
      - "*.txt"
    when: always
  dependencies:
    - build_wheel
  parallel:
    matrix:
      - IDF_BRANCH_TAG: [release-v5.0, release-v5.1]
        PYTHON_IMAGE_TAG: [3.7-bullseye, 3.12-bullseye]
        REQ_FILE: ["tools/requirements/requirements.core.txt"]
      - IDF_BRANCH_TAG: [release-v5.2, release-v5.3, master]
        PYTHON_IMAGE_TAG: [3.8-bullseye, 3.12-bullseye]
        REQ_FILE: ["tools/requirements/requirements.core.txt"]
  before_script:
    # Set the branch name for the esp-idf
    - BRANCH_NAME=$(echo $IDF_BRANCH_TAG | sed -e "s/release-v/release\/v/g")
    - export IDF_BRANCH=${BRANCH_NAME}

    - |
      if [ -n "${MASTER_RELEASE_CUSTOM_TAG:-}" ]; then
        BRANCH_NAME=${MASTER_RELEASE_CUSTOM_TAG/-//}
        IDF_BRANCH_TAG=${MASTER_RELEASE_CUSTOM_TAG}
        IDF_REPO=https://gitlab-ci-token:${ESPCI_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/espressif/esp-idf.git
      fi

    - IMAGE_TAG="${DOCKER_REGISTRY}/component-manager-integration-tests:${PYTHON_IMAGE_TAG}-${IDF_BRANCH_TAG}"

    - echo "Using esp-idf branch - ${BRANCH_NAME}"
    - echo "Creating docker image - ${IMAGE_TAG}"

    # Get the version of component manager
    - WHEEL=$(ls ${CI_PROJECT_DIR}/dist/*.whl)

    - git clone ${IDF_REPO:-https://github.com/espressif/esp-idf.git} --recursive -b $BRANCH_NAME --depth 1
    - cd ./esp-idf/

    # Download the constraints file, and remove the component manager constraint and save it in the .espressif directory
    - |
      if [ "${IDF_BRANCH_TAG}" = "master" ]; then
        export CONSTRAINT_FILE_VERSION="v5.4"
      else
        export CONSTRAINT_FILE_VERSION=$(echo $IDF_BRANCH_TAG | sed -e "s/release-v/v/g")
      fi
      export CI_PYTHON_CONSTRAINT_FILE="espidf.constraints.${CONSTRAINT_FILE_VERSION}.txt"
      curl https://dl.espressif.com/dl/esp-idf/${CI_PYTHON_CONSTRAINT_FILE} | \
      grep -v "^idf-component-manager" \
      > ~/.espressif/${CI_PYTHON_CONSTRAINT_FILE}

    - ORIGINAL_REQ=$(grep idf-component-manager ${REQ_FILE:-requirements.txt})
    # Replace component manager in the requirements file with local copy
    - sed -i "\+${ORIGINAL_REQ}+c${WHEEL}" ${REQ_FILE:-requirements.txt}
    - pip install -U pip
    - ./install.sh
    # And replace it back to avoid export.sh check dependecies error
    - sed -i "\+${WHEEL}+c${ORIGINAL_REQ}" ${REQ_FILE:-requirements.txt}
    - . ./export.sh
    - cd ..
    - apt update && apt install -y fish zsh
    - pip install pytest pytest-cov requests-mock pexpect "jinja2<3.1"
  script:
    - ls dist
    - pytest -s -c pytest_integration.ini --cov=. --cov-report=xml:coverage_integration.xml --log-cli-level=INFO
