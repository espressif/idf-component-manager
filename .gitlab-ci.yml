stages:
  - check
  - build
  - test
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: "$CI_COMMIT_BRANCH"

.check:
  image: python:3.10-bullseye
  stage: check
  tags:
    - lint
    - internet

check_changelog:
  extends: .check
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - |
      (git diff-tree --name-only --no-commit-id "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" "${CI_COMMIT_SHA}" | grep "CHANGELOG.md") || \
        [[ "${CI_MERGE_REQUEST_LABELS}" =~ ^(.*,)*no_changelog(,.*)*$ ]] || \
        (echo "Please either update CHANGELOG.md file or add 'no_chagelog' label" && exit 1)

check_pre_commit:
  extends: .check
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  before_script:
    - pip install pre-commit
  script:
    - git diff --name-only --no-commit-id "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" "${CI_COMMIT_SHA}" | xargs pre-commit run --files

prepare_tests:
  extends: .check
  script:
    - python ci/prepare_tests.py
  artifacts:
    paths:
      - ci/tests.yml

build-docs:
  stage: test
  image: python:3.10-slim-bullseye
  tags:
    - internet
  script:
    - pip install -r docs/requirements.txt
    - sphinx-build docs/en html_output
  after_script:
    - 'echo "preview link: ${GITLAB_PAGE_HTTPS_URL}/-/idf-component-manager/-/jobs/${CI_JOB_ID}/artifacts/html_output/index.html"'
  artifacts:
    paths:
      - html_output/
    when: always
    expire_in: 4 days
    expose_as: "docs preview"

tests:
  stage: test
  needs:
    - prepare_tests
  trigger:
    strategy: depend
    include:
      - artifact: ci/tests.yml
        job: prepare_tests

publish_on_pypi:
  image: python:3.10-slim-bullseye
  stage: deploy
  tags:
    - internet
  variables:
    TWINE_NON_INTERACTIVE: "true"
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ${PYPI_TOKEN}
  before_script:
    - apt update && apt install curl jq -y
    - pip install twine
  script:
    - ./publish.sh
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH =~ /^release\/v.*/
